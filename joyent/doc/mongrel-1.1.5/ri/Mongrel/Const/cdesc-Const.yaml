--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: Frequently used constants when constructing requests or responses. Many times the constant just refers to a string with the same contents. Using these constants gave about a 3% to 10% performance improvement over using the strings directly. Symbols did not really improve things much compared to constants.
- !ruby/struct:SM::Flow::P 
  body: While Mongrel does try to emulate the CGI/1.2 protocol, it does not use the REMOTE_IDENT, REMOTE_USER, or REMOTE_HOST parameters since those are either a security problem or too taxing on performance.
constants: 
- !ruby/object:RI::Constant 
  comment: 
  name: DATE
  value: "\"Date\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: This is the part of the path after the SCRIPT_NAME. URIClassifier will determine this.
  name: PATH_INFO
  value: "\"PATH_INFO\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: This is the initial part that your handler is identified as by URIClassifier.
  name: SCRIPT_NAME
  value: "\"SCRIPT_NAME\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The original URI requested by the client. Passed to URIClassifier to build PATH_INFO and SCRIPT_NAME.
  name: REQUEST_URI
  value: "'REQUEST_URI'.freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: REQUEST_PATH
  value: "'REQUEST_PATH'.freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: MONGREL_VERSION
  value: "\"1.1.5\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: MONGREL_TMP_BASE
  value: "\"mongrel\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The standard empty 404 response for bad requests. Use Error4040Handler for custom stuff.
  name: ERROR_404_RESPONSE
  value: "\"HTTP/1.1 404 Not Found\\r\\nConnection: close\\r\\nServer: Mongrel #{MONGREL_VERSION}\\r\\n\\r\\nNOT FOUND\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: CONTENT_LENGTH
  value: "\"CONTENT_LENGTH\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: A common header for indicating the server is too busy. Not used yet.
  name: ERROR_503_RESPONSE
  value: "\"HTTP/1.1 503 Service Unavailable\\r\\n\\r\\nBUSY\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The basic max request size we'll try to read.
  name: CHUNK_SIZE
  value: (16 * 1024)
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: This is the maximum header that is allowed before a client is booted. The parser detects this, but we'd also like to do this as well.
  name: MAX_HEADER
  value: 1024 * (80 + 32)
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Maximum request body size before it is moved out of memory and into a tempfile for reading.
  name: MAX_BODY
  value: MAX_HEADER
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: A frozen format for this is about 15% faster
  name: STATUS_FORMAT
  value: "\"HTTP/1.1 %d %s\\r\\nConnection: close\\r\\n\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: CONTENT_TYPE
  value: "\"Content-Type\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: LAST_MODIFIED
  value: "\"Last-Modified\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: ETAG
  value: "\"ETag\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: SLASH
  value: "\"/\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: REQUEST_METHOD
  value: "\"REQUEST_METHOD\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: GET
  value: "\"GET\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: HEAD
  value: "\"HEAD\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: ETag is based on the apache standard of hex mtime-size-inode (inode is 0 on win32)
  name: ETAG_FORMAT
  value: "\"\\\"%x-%x-%x\\\"\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: HEADER_FORMAT
  value: "\"%s: %s\\r\\n\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: LINE_END
  value: "\"\\r\\n\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: REMOTE_ADDR
  value: "\"REMOTE_ADDR\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: HTTP_X_FORWARDED_FOR
  value: "\"HTTP_X_FORWARDED_FOR\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: HTTP_IF_MODIFIED_SINCE
  value: "\"HTTP_IF_MODIFIED_SINCE\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: HTTP_IF_NONE_MATCH
  value: "\"HTTP_IF_NONE_MATCH\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: REDIRECT
  value: "\"HTTP/1.1 302 Found\\r\\nLocation: %s\\r\\nConnection: close\\r\\n\\r\\n\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: HOST
  value: "\"HOST\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: DATE
  value: "\"Date\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: This is the part of the path after the SCRIPT_NAME. URIClassifier will determine this.
  name: PATH_INFO
  value: "\"PATH_INFO\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: This is the initial part that your handler is identified as by URIClassifier.
  name: SCRIPT_NAME
  value: "\"SCRIPT_NAME\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The original URI requested by the client. Passed to URIClassifier to build PATH_INFO and SCRIPT_NAME.
  name: REQUEST_URI
  value: "'REQUEST_URI'.freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: REQUEST_PATH
  value: "'REQUEST_PATH'.freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: MONGREL_VERSION
  value: "\"1.1.5\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: MONGREL_TMP_BASE
  value: "\"mongrel\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The standard empty 404 response for bad requests. Use Error4040Handler for custom stuff.
  name: ERROR_404_RESPONSE
  value: "\"HTTP/1.1 404 Not Found\\r\\nConnection: close\\r\\nServer: Mongrel #{MONGREL_VERSION}\\r\\n\\r\\nNOT FOUND\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: CONTENT_LENGTH
  value: "\"CONTENT_LENGTH\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: A common header for indicating the server is too busy. Not used yet.
  name: ERROR_503_RESPONSE
  value: "\"HTTP/1.1 503 Service Unavailable\\r\\n\\r\\nBUSY\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The basic max request size we'll try to read.
  name: CHUNK_SIZE
  value: (16 * 1024)
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: This is the maximum header that is allowed before a client is booted. The parser detects this, but we'd also like to do this as well.
  name: MAX_HEADER
  value: 1024 * (80 + 32)
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Maximum request body size before it is moved out of memory and into a tempfile for reading.
  name: MAX_BODY
  value: MAX_HEADER
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: A frozen format for this is about 15% faster
  name: STATUS_FORMAT
  value: "\"HTTP/1.1 %d %s\\r\\nConnection: close\\r\\n\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: CONTENT_TYPE
  value: "\"Content-Type\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: LAST_MODIFIED
  value: "\"Last-Modified\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: ETAG
  value: "\"ETag\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: SLASH
  value: "\"/\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: REQUEST_METHOD
  value: "\"REQUEST_METHOD\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: GET
  value: "\"GET\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: HEAD
  value: "\"HEAD\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: ETag is based on the apache standard of hex mtime-size-inode (inode is 0 on win32)
  name: ETAG_FORMAT
  value: "\"\\\"%x-%x-%x\\\"\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: HEADER_FORMAT
  value: "\"%s: %s\\r\\n\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: LINE_END
  value: "\"\\r\\n\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: REMOTE_ADDR
  value: "\"REMOTE_ADDR\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: HTTP_X_FORWARDED_FOR
  value: "\"HTTP_X_FORWARDED_FOR\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: HTTP_IF_MODIFIED_SINCE
  value: "\"HTTP_IF_MODIFIED_SINCE\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: HTTP_IF_NONE_MATCH
  value: "\"HTTP_IF_NONE_MATCH\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: REDIRECT
  value: "\"HTTP/1.1 302 Found\\r\\nLocation: %s\\r\\nConnection: close\\r\\n\\r\\n\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: HOST
  value: "\"HOST\".freeze"
full_name: Mongrel::Const
includes: []

instance_methods: []

name: Const
superclass: 
